package cop5555sp15;
import static org.junit.Assert.assertNotNull;

import java.io.File;
import java.io.FileReader;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.List;

import cop5555sp15.ast.ASTNode;
import cop5555sp15.ast.CodeGenVisitor;
import cop5555sp15.ast.Program;
import cop5555sp15.ast.TypeCheckVisitor;
import cop5555sp15.symbolTable.SymbolTable;
public class CodeletBuilder 
{
	
	private ASTNode parseCorrectInput(String input) {
		TokenStream stream = new TokenStream(input);
		Scanner scanner = new Scanner(stream);
		scanner.scan();
		Parser parser = new Parser(stream);
		System.out.println();
		ASTNode ast = parser.parse();
		if (ast == null) {
			System.out.println("errors " + parser.getErrors());
		}
		assertNotNull(ast);
		return ast;
	}
	
	private byte[] generateByteCode(ASTNode ast) throws Exception {
		CodeGenVisitor v = new CodeGenVisitor();
			byte[] bytecode = (byte[]) ast.visit(v, null);
			//dumpBytecode(bytecode);
			return bytecode;
	}
	
	
	public static Codelet newInstance(String source) throws Exception
	{
		//TODO
		Program program = (Program) parseCorrectInput(source);
		byte[] bytecode = generateByteCode(program);
		return null;
	}
	
	public static Codelet newInstance(File file) throws Exception 
	{
		//TODO
		return null;
	}
	
	@SuppressWarnings("rawtypes")
	public static List getList(Codelet codelet, String name) throws Exception
	{
	//TODO
		
		Class<? extends Codelet> codeletClass = codelet.getClass();
		Field l1Field = codeletClass.getDeclaredField(name);
		List l = (ArrayList) l1Field.get(codelet);
		return l;
	
	}
	
	public static int getInt(Codelet codelet, String name) throws Exception
	{
		//TODO
		Class<? extends Codelet> codeletClass = codelet.getClass();
		Field l1Field = codeletClass.getDeclaredField(name);
		int i = (int) l1Field.get(codelet);
		return i;
	}
	
	public static void setInt(Codelet codelet, String name, int value) throws Exception
	{
		//TODO
		Class<? extends Codelet> codeletClass = codelet.getClass();
		Field l1Field = codeletClass.getDeclaredField(name);
		l1Field.set(codelet, value);
	}
	
	
	public static String getString(Codelet codelet, String name) throws Exception
	{
		//TODO
		return null;
	}
	public static void setString(Codelet codelet, String name, String value) throws Exception
	{
		//TODO
	
	}
	
	public static boolean getBoolean(Codelet codelet, String name) throws Exception
	{
		//TODO
		return false;
	}

	public static void setBoolean(Codelet codelet, String name, boolean value) throws Exception
	{
		//TODO
	}
}